{
  "options": {},
  "name": "collections_hub_golden_path_feature_tests_resources_based_parties",
  "test_cases": [
    {
      "id": 1,
      "name": "tests against parties information",
      "fileInfo": {
        "path": "collections/hub/golden_path/feature_tests/resources_based/parties.json",
        "labels": ["prod-tests"]
      },
      "meta": {
        "info": "tests against parties information"
      },
      "requests": [
        {
          "id": 1,
          "description": "Look up party information",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}",
          "method": "get",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}",
            "Accept": "{$inputs.accept}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 202",
                "exec": ["expect(response.status).to.equal(202)"]
              },
              {
                "id": 2,
                "description": "Response statusText be Accepted",
                "exec": ["expect(response.statusText).to.equal('Accepted')"]
              },
              {
                "id": 3,
                "description": "Callback Content Length not 0",
                "exec": [
                  "expect(callback.headers['Content-Length']).to.not.equal('0')"
                ]
              },
              {
                "id": 4,
                "description": "Callback body should contain party",
                "exec": ["expect(callback.body).to.have.property('party')"]
              },
              {
                "id": 5,
                "description": "Request FSPIOP-Source same as inputs fromFspId",
                "exec": [
                  "expect('{$request.headers['FSPIOP-Source']}').to.equal('{$inputs.fromFspId}')"
                ]
              },
              {
                "id": 6,
                "description": "Callback FSPIOP-Destination same as request FSPIOP-Source",
                "exec": [
                  "expect(callback.headers['fspiop-destination']).to.equal('{$request.headers['FSPIOP-Source']}')"
                ]
              },
              {
                "id": 7,
                "description": "Callback content-type to be parties",
                "exec": [
                  "expect(callback.headers['content-type']).to.equal('application/vnd.interoperability.parties+json;version={$inputs.expectedPartiesVersion}')"
                ]
              },
              {
                "id": 8,
                "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                "exec": [
                  "expect(callback.body.party.partyIdInfo.partyIdType).to.equal('{$inputs.toIdType}')",
                  "expect(callback.body.party.partyIdInfo.partyIdentifier).to.equal('{$inputs.toIdValue}')"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "description": "Return party information",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}",
          "method": "put",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 200",
                "exec": ["expect(response.status).to.equal(200)"]
              },
              {
                "id": 2,
                "description": "Response statusText be OK",
                "exec": ["expect(response.statusText).to.equal('OK')"]
              }
            ]
          },
          "body": {
            "party": {
              "partyIdInfo": {
                "partyIdType": "PERSONAL_ID",
                "partyIdentifier": 16135551212,
                "partySubIdOrType": "DRIVING_LICENSE",
                "fspId": 1234,
                "extensionList": {
                  "extension": [
                    {
                      "key": "string",
                      "value": "string"
                    }
                  ]
                }
              },
              "merchantClassificationCode": 4321,
              "name": "Henrik Karlsson",
              "personalInfo": {
                "complexName": {
                  "firstName": "Henrik",
                  "middleName": "Johannes",
                  "lastName": "Karlsson"
                },
                "dateOfBirth": "1966-06-16"
              }
            }
          }
        },
        {
          "id": 3,
          "description": "Return party information error",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}/error",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}/error",
          "method": "put",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 200",
                "exec": ["expect(response.status).to.equal(200)"]
              },
              {
                "id": 2,
                "description": "Response statusText be OK",
                "exec": ["expect(response.statusText).to.equal('OK')"]
              }
            ]
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}"
          },
          "body": {
            "errorInformation": {
              "errorCode": 5100,
              "errorDescription": "This is an error description.",
              "extensionList": {
                "extension": [
                  {
                    "key": "string",
                    "value": "string"
                  }
                ]
              }
            }
          }
        },
        {
          "id": 4,
          "description": "Look up party information - subId",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}/{SubId}",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}/",
          "method": "get",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}",
            "SubId": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 202",
                "exec": ["expect(response.status).to.equal(202)"]
              },
              {
                "id": 2,
                "description": "Response statusText be Accepted",
                "exec": ["expect(response.statusText).to.equal('Accepted')"]
              }
            ]
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}",
            "Accept": "{$inputs.accept}"
          }
        },
        {
          "id": 5,
          "description": "Return party information - subId",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}/{SubId}",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}/",
          "method": "put",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}",
            "SubId": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 200",
                "exec": ["expect(response.status).to.equal(200)"]
              },
              {
                "id": 2,
                "description": "Response statusText be OK",
                "exec": ["expect(response.statusText).to.equal('OK')"]
              }
            ]
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}"
          },
          "body": {
            "party": {
              "partyIdInfo": {
                "partyIdType": "PERSONAL_ID",
                "partyIdentifier": 16135551212,
                "partySubIdOrType": "DRIVING_LICENSE",
                "fspId": 1234,
                "extensionList": {
                  "extension": [
                    {
                      "key": "string",
                      "value": "string"
                    }
                  ]
                }
              },
              "merchantClassificationCode": 4321,
              "name": "Henrik Karlsson",
              "personalInfo": {
                "complexName": {
                  "firstName": "Henrik",
                  "middleName": "Johannes",
                  "lastName": "Karlsson"
                },
                "dateOfBirth": "1966-06-16"
              }
            }
          }
        },
        {
          "id": 6,
          "description": "Return party information error - subId",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}/{SubId}/error",
          "path": "/parties/{$inputs.toIdType}/{$inputs.toIdValue}//error",
          "method": "put",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.toIdValue}",
            "SubId": ""
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 200",
                "exec": ["expect(response.status).to.equal(200)"]
              },
              {
                "id": 2,
                "description": "Response statusText be OK",
                "exec": ["expect(response.statusText).to.equal('OK')"]
              }
            ]
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.fromFspId}"
          },
          "body": {
            "errorInformation": {
              "errorCode": 5100,
              "errorDescription": "This is an error description.",
              "extensionList": {
                "extension": [
                  {
                    "key": "string",
                    "value": "string"
                  }
                ]
              }
            }
          }
        }
      ]
    }
  ]
}
