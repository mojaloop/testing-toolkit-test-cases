{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "Tests for Bugfix #981 - Fix 500 http code instead of 400",
      "meta": {
        "info": "Tests for Bugfix #981 - Fix 500 http code instead of 400"
      },
      "requests": [
        {
          "id": 6,
          "meta": {
            "info": "Add participant - duplicate account"
          },
          "description": "Add participant - duplicate account",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants",
          "path": "/participants",
          "method": "post",
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.fromFspId}",
            "Authorization": "{$inputs.TTK_BEARER_TOKEN}"
          },
          "ignoreCallbacks": true,
          "body": {
            "name": "{$inputs.SIMPAYER_NAME}",
            "currency": "{$inputs.currency}"
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response code is 400",
                "exec": [
                  "expect(response.status).to.equal(400)"
                ]
              },
              {
                "id": 2,
                "description": "Check Generic client error for duplicate currency",
                "exec": [
                  "expect(response.body.errorInformation.errorDescription).to.include('Generic client error');"
                ]
              },
              {
                "id": 3,
                "description": "Check Error code 3000",
                "exec": [
                  "expect(response.body.errorInformation.errorCode).to.include('3000');"
                ]
              }
            ]
          }
        },
        {
          "id": 7,
          "meta": {
            "info": "Add non existing Participant"
          },
          "description": "Add non existing Participant",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}",
          "path": "/participants/xyz",
          "method": "get",
          "params": {
            "name": "xyz"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "ignoreCallbacks": true,
          "headers": {
            "FSPIOP-Source": "{$inputs.SIMPAYER_NAME}",
            "Authorization": "{$inputs.PAYER_BEARER_TOKEN}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response code is 400",
                "exec": [
                  "expect(response.status).to.equal(400)"
                ]
              },
              {
                "id": 2,
                "description": "Check Generic ID not found - non existing participant",
                "exec": [
                  "expect(response.body.errorInformation.errorDescription).to.include('Generic ID not found');"
                ]
              },
              {
                "id": 3,
                "description": "Check Error code 3200",
                "exec": [
                  "expect(response.body.errorInformation.errorCode).to.include('3200');"
                ]
              }
            ]
          }
        },
        {
          "id": 8,
          "meta": {
            "info": "Add Participant - Invalid Currency"
          },
          "description": "Add Participant - Invalid Currency",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants",
          "path": "/participants",
          "method": "post",
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.fromFspId}",
            "Authorization": "{$inputs.TTK_BEARER_TOKEN}"
          },
          "ignoreCallbacks": true,
          "body": {
            "name": "payer10",
            "currency": "A#"
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response code is 400",
                "exec": [
                  "expect(response.status).to.equal(400)"
                ]
              },
              {
                "id": 2,
                "description": "Check Malformed syntax - malformed currency",
                "exec": [
                  "expect(response.body.errorInformation.errorDescription).to.include('Malformed syntax');"
                ]
              },
              {
                "id": 3,
                "description": "Check Error code 3101",
                "exec": [
                  "expect(response.body.errorInformation.errorCode).to.include('3101');"
                ]
              }
            ]
          },
          "params": {
            "name": ""
          }
        }
      ],
      "fileInfo": {
        "path": "hub/golden_path/bug fixes/Tests for Bugfix #981 - Fix 500 http code instead of 400.json"
      }
    }
  ]
}