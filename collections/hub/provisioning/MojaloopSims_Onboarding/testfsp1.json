{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "testfsp1 account",
      "meta": {
        "info": "testfsp1 account"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Add testfsp1"
          },
          "description": "Add testfsp1",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants",
          "path": "/participants",
          "method": "post",
          "body": {
            "name": "{$inputs.SIM1_NAME}",
            "currency": "{$inputs.currency}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "meta": {
            "info": "Add initial position and limits - testfsp1"
          },
          "description": "Add initial position and limits - testfsp1",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/initialPositionAndLimits",
          "path": "/participants/{$inputs.SIM1_NAME}/initialPositionAndLimits",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "currency": "{$inputs.currency}",
            "limit": {
              "type": "NET_DEBIT_CAP",
              "value": 10000
            },
            "initialPosition": 0
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 500 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(500)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "meta": {
            "info": "testfsp1 Get Status Request before deposit"
          },
          "description": "testfsp1 Get Status Request before deposit",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.SIM1_NAME}/accounts",
          "method": "get",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              }
            ]
          },
          "scripts": {
            "postRequest": {
              "exec": [
                "const jsonData = pm.response.body",
                "console.log(jsonData)",
                "for(var i in jsonData) {",
                "  if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
                "    pm.environment.set(\"testfsp1SettlementAccountId\", jsonData[i].id)",
                "    pm.environment.set(\"testfsp1SettlementAccountBalanceBeforeFundsIn\", jsonData[i].value)",
                "  }",
                "}"
              ]
            }
          }
        },
        {
          "id": 4,
          "meta": {
            "info": "Deposit Funds in Settlement Account - testfsp1"
          },
          "description": "Deposit Funds in Settlement Account - testfsp1",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts/{id}",
          "path": "/participants/{$inputs.SIM1_NAME}/accounts/{$environment.testfsp1SettlementAccountId}",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}",
            "id": "{$environment.testfsp1SettlementAccountId}"
          },
          "body": {
            "transferId": "{$environment.testfsp1fundsInPrepareTransferId}",
            "externalReference": "string",
            "action": "recordFundsIn",
            "reason": "string",
            "amount": {
              "amount": "{$environment.testfsp1fundsInPrepareAmount}",
              "currency": "{$inputs.currency}"
            },
            "extensionList": {
              "extension": [
                {
                  "key": "string",
                  "value": "string"
                }
              ]
            }
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "var uuid = require('uuid');",
                "pm.environment.set('testfsp1fundsInPrepareTransferId', uuid.v4())",
                "pm.environment.set('testfsp1fundsInPrepareAmount', 5000);"
              ]
            }
          }
        },
        {
          "id": 5,
          "meta": {
            "info": "testfsp1 Get Status Request after deposit"
          },
          "description": "testfsp1 Get Status Request after deposit",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.SIM1_NAME}/accounts",
          "method": "get",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": 2,
                "description": "testfsp1 Settlement Account Balance After FundsIn should be equal to the balance before plus the transfer amount",
                "exec": [
                  "expect(+environment.testfsp1SettlementAccountBalanceAfterFundsIn).to.equal(+environment.testfsp1SettlementAccountBalanceBeforeFundsIn - +environment.testfsp1fundsInPrepareAmount)"
                ]
              }
            ]
          },
          "delay": "500",
          "scripts": {
            "postRequest": {
              "exec": [
                "const jsonData = pm.response.body",
                "console.log(jsonData)",
                "for(var i in jsonData) {",
                "  if(jsonData[i].ledgerAccountType === 'SETTLEMENT') {",
                "    pm.environment.set(\"testfsp1SettlementAccountBalanceAfterFundsIn\", jsonData[i].value)",
                "  }",
                "}"
              ]
            }
          }
        },
        {
          "id": 6,
          "meta": {
            "info": "Add testfsp1 with second currency"
          },
          "description": "Add testfsp1 with second currency",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants",
          "path": "/participants",
          "method": "post",
          "body": {
            "name": "{$inputs.SIM1_NAME}",
            "currency": "{$inputs.currency2}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 7,
          "meta": {
            "info": "Add initial position and limits - testfsp1 with second currency"
          },
          "description": "Add initial position and limits - testfsp1 with second currency",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/initialPositionAndLimits",
          "path": "/participants/{$inputs.SIM1_NAME}/initialPositionAndLimits",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "currency": "{$inputs.currency2}",
            "limit": {
              "type": "NET_DEBIT_CAP",
              "value": 10000
            },
            "initialPosition": 0
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 500 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(500)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 8,
          "description": "Add testfsp1 with second currency CGS",
          "meta": {
            "info": "Add testfsp1 with second currency"
          },
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants",
          "path": "/participants",
          "method": "post",
          "body": {
            "name": "{$inputs.SIM1_NAME}",
            "currency": "{$inputs.cgscurrency}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 9,
          "description": "Add initial position and limits - testfsp1 with second currency CGS",
          "meta": {
            "info": "Add initial position and limits - testfsp1 with second currency"
          },
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/initialPositionAndLimits",
          "path": "/participants/{$inputs.SIM1_NAME}/initialPositionAndLimits",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "currency": "{$inputs.cgscurrency}",
            "limit": {
              "type": "NET_DEBIT_CAP",
              "value": 10000
            },
            "initialPosition": 0
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 500 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(500)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2,
      "name": "testfsp1 callbacks",
      "meta": {
        "info": "testfsp1 callbacks"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES GET"
          },
          "description": "Add testfsp1 callback - PARTIES GET",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_GET",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES PUT"
          },
          "description": "Add testfsp1 callback - PARTIES PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES PUT Error"
          },
          "description": "Add testfsp1 callback - PARTIES PUT Error",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_PUT_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 4,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT PUT"
          },
          "description": "Add testfsp1 callback - PARTICIPANT PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{partyIdType}}/{{partyIdentifier}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 5,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT PUT Error"
          },
          "description": "Add testfsp1 callback - PARTICIPANT PUT Error",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_PUT_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{partyIdType}}/{{partyIdentifier}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 6,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT PUT Batch"
          },
          "description": "Add testfsp1 callback - PARTICIPANT PUT Batch",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{requestId}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 7,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT PUT Batch Error"
          },
          "description": "Add testfsp1 callback - PARTICIPANT PUT Batch Error",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_BATCH_PUT_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{requestId}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 8,
          "meta": {
            "info": "Add testfsp1 callback - QUOTES"
          },
          "description": "Add testfsp1 callback - QUOTES",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_QUOTES",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 9,
          "meta": {
            "info": "Add testfsp1 callback - TRANSFERS POST"
          },
          "description": "Add testfsp1 callback - TRANSFERS POST",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_TRANSFER_POST",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/transfers"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 10,
          "meta": {
            "info": "Add testfsp1 callback - TRANSFERS PUT"
          },
          "description": "Add testfsp1 callback - TRANSFERS PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_TRANSFER_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/transfers/{{transferId}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 11,
          "meta": {
            "info": "Add testfsp1 callback - TRANSFERS ERROR"
          },
          "description": "Add testfsp1 callback - TRANSFERS ERROR",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_TRANSFER_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/transfers/{{transferId}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 12,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT SUB-ID PUT"
          },
          "description": "Add testfsp1 callback - PARTICIPANT SUB-ID PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_SUB_ID_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 13,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT SUB-ID PUT Error"
          },
          "description": "Add testfsp1 callback - PARTICIPANT SUB-ID PUT Error",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_SUB_ID_PUT_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 14,
          "meta": {
            "info": "Add testfsp1 callback - PARTICIPANT SUB-ID DELETE"
          },
          "description": "Add testfsp1 callback - PARTICIPANT SUB-ID DELETE",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTICIPANT_SUB_ID_DELETE",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/participants/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 15,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES SUB-ID GET"
          },
          "description": "Add testfsp1 callback - PARTIES SUB-ID GET",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_SUB_ID_GET",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 16,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES SUB-ID PUT"
          },
          "description": "Add testfsp1 callback - PARTIES SUB-ID PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_SUB_ID_PUT",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 17,
          "meta": {
            "info": "Add testfsp1 callback - PARTIES SUB-ID ERROR PUT"
          },
          "description": "Add testfsp1 callback - PARTIES SUB-ID ERROR PUT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json"
          },
          "body": {
            "type": "FSPIOP_CALLBACK_URL_PARTIES_SUB_ID_PUT_ERROR",
            "value": "{$inputs.TESTFSP1_CALLBACK_URL}/parties/{{partyIdType}}/{{partyIdentifier}}/{{partySubIdOrType}}/error"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3,
      "name": "testfsp1 notification_emails",
      "meta": {
        "info": "testfsp1 notification_emails"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL"
          },
          "description": "Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "type": "NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
            "value": "{$inputs.testfsp1Email}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "meta": {
            "info": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL"
          },
          "description": "Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "type": "NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
            "value": "{$inputs.testfsp1Email}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "meta": {
            "info": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL"
          },
          "description": "Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.SIM1_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.SIM1_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "type": "SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
            "value": "{$inputs.testfsp1Email}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 4,
      "name": "testfsp1 oracle_registration",
      "meta": {
        "info": "testfsp1 oracle_registration"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Add payeeIdentifier in payeeIdType Oracle"
          },
          "description": "Add payeeIdentifier in payeeIdType Oracle",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true
          },
          "operationPath": "/participants/{Type}/{ID}",
          "path": "/participants/{$inputs.payeeIdType}/{$inputs.testfsp1Identifier}",
          "method": "post",
          "params": {
            "Type": "{$inputs.payeeIdType}",
            "ID": "{$inputs.testfsp1Identifier}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "application/vnd.interoperability.participants+json;version=1.0",
            "Accept": "application/vnd.interoperability.participants+json;version=1",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.SIM1_NAME}"
          },
          "body": {
            "fspId": "{$inputs.SIM1_NAME}",
            "currency": "{$inputs.currency}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              }
            ]
          },
          "ignoreCallbacks": true
        }
      ]
    },
    {
      "id": 5,
      "name": "testfsp1 add_users",
      "meta": {
        "info": "testfsp1 add_users"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Add SubId User - testfsp1IdType - testfsp1Identifier - 100"
          },
          "description": "Add SubId User - testfsp1IdType - testfsp1Identifier - 100",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true
          },
          "operationPath": "/participants/{Type}/{ID}/{SubId}",
          "path": "/participants/{$inputs.testfsp1IdType}/{$inputs.testfsp1Identifier}/100",
          "method": "post",
          "params": {
            "Type": "{$inputs.testfsp1IdType}",
            "ID": "{$inputs.testfsp1Identifier}",
            "SubId": "100"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "application/vnd.interoperability.participants+json;version=1.0",
            "Accept": "application/vnd.interoperability.participants+json;version=1",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.hub_operator}"
          },
          "body": {
            "fspId": "{$inputs.SIM1_NAME}",
            "currency": "{$inputs.currency}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              }
            ]
          },
          "ignoreCallbacks": true,
          "scripts": {
            "preRequest": {
              "exec": [
                "pm.environment.set('fullName', 'Testfsp1First Testfsp1Last');\r",
                "pm.environment.set('firstName', 'Testfsp1First');\r",
                "pm.environment.set('middleName', 'Testfsp1Middle');\r",
                "pm.environment.set('lastName', 'Testfsp1Last');\r",
                "pm.environment.set('dob', '2010-10-10');\r",
                "const testApiAddParty = {\r",
                "    url: pm.environment.get(\"TESTFSP1_BACKEND_TESTAPI_URL\") + '/repository/parties',\r",
                "    method: 'POST',\r",
                "    header: {\r",
                "        'Content-Type': 'application/json'\r",
                "    },\r",
                "    body: {\r",
                "      mode: 'raw',\r",
                "      raw: JSON.stringify({\r",
                "        \"displayName\": \"Testfsp1First Testfsp1Last\",\r",
                "        \"firstName\": \"Testfsp1First\",\r",
                "        \"middleName\": \"Testfsp1Middle\",\r",
                "        \"lastName\": \"Testfsp1Last\",\r",
                "        \"dateOfBirth\": \"2010-10-10\",\r",
                "        \"idType\": pm.environment.get(\"testfsp1IdType\"),\r",
                "        \"idValue\": pm.environment.get(\"testfsp1Identifier\")\r",
                "    })\r",
                "    }\r",
                "}\r",
                "  \r",
                "pm.sendRequest(testApiAddParty, function (err, response) {\r",
                "    console.log('testApiAddParty: ', JSON.stringify(response.json()))\r",
                "});"
              ]
            }
          }
        }
      ]
    }
  ]
}