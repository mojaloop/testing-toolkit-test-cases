{
  "name": "multi",
  "test_cases": [
    {
      "id": "tc-bq1-given-par-5300",
      "name": "TC-BQ1. Given party lookup is skipped and bulk quotes request is submitted, When receiver fsp fails the entire batch and sends the error, Then the PUT response should have error details about the transfer.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": "Check-that-rsp-has-http-status",
                "description": "Check that the response has an http status code of 500",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.httpStatusCode).to.equal(500)"
                ]
              },
              {
                "id": "Check-that-rsp-has-error-code-",
                "description": "Check that the response has an error code of 4001",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('2001')"
                ]
              },
              {
                "id": "Check-that-rsp-has-error-descr",
                "description": "Check that the response has an error description of Error processing bulk quote",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote')"
                ]
              },
              {
                "id": "Check-state-COMPLETED",
                "description": "Check state is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            }
          }
        }
      ]
    },
    {
      "id": "tc-bq2-given-par-d5f0",
      "name": "TC-BQ2. Given party lookup is skipped and bulk quotes request is submitted, When receiver fsp times out while sending bulk quotes reponse, Then the PUT response should have error details about timeout.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchtimesout"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn",
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": "Check-rsp-has-quote-result-fir",
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.httpStatusCode).to.equal(504);"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bq3-given-the-0901",
      "name": "TC-BQ3. Given there are 2 transfers in the bulk request and acceptParty is true for both the transfers, When the receiver fsp sends success response for first quote and failure for the second quote, Then the PUT response should have details of success and failure for both the quotes.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "2016-05-24T08:38:08.699-04:00"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchpartialsuccess"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_PARTY_NOT_FOUND}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchpartialsuccess"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-rsp-has-quote-result-fir",
                "description": "Check response has quote result for first quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": "Check-rsp-has-ilpPacket-condit",
                "description": "Check response has ilpPacket and condition for first quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-rsp-has-error-code-secon",
                "description": "Check response has error code for second quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse.lastError.mojaloopError.errorInformation.errorCode).to.equal('5101');"
                ]
              },
              {
                "id": "Check-rsp-has-error-descriptio",
                "description": "Check response has error description for second quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse.lastError.mojaloopError.errorInformation.errorDescription).to.equal('Payee rejected quote - Payee Rejected Quote');"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bq5-given-the-006d",
      "name": "TC-BQ5. Given there are 2 transfers in the bulk request, When the sender fsp sends the acceptParty:true for 1 transfer and acceptParty:false for the second transfer, Then the PUT response should have details of the 1 quote for which the acceptParty:true response was sent.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchwith1qtresponse"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchwith1qtresponse"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc456",
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": false
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": "Check-rsp-has-quote-result-fir",
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": "Check-rsp-has-ilpPacket-condit",
                "description": "Check response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bq9-given-the-e677",
      "name": "TC-BQ9. Given the transfers in the bulk request have 2 different receiver fsp ids, When one of the receivers sends an error, Then the PUT response should have details of the 2 transfers with success and failure details.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatch"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn",
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-rsp-has-successful-quote",
                "description": "Check response has successful quote",
                "exec": [
                  "expect(requestVariables.quoteSuccess).to.exist;"
                ]
              },
              {
                "id": "Check-success-rsp-has-ilpPacke",
                "description": "Check success response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(requestVariables.quoteSuccess.quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(requestVariables.quoteSuccess.quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-rsp-failure-quote",
                "description": "Check response for failure quote",
                "exec": [
                  "expect(requestVariables.quoteFailure).to.exist;"
                ]
              },
              {
                "id": "Check-failure-quote-rsp-has-er",
                "description": "Check failure quote response has error code and error description",
                "exec": [
                  "expect(requestVariables.quoteFailure.lastError.mojaloopError.errorInformation.errorCode).to.equal('2001');",
                  "",
                  "expect(requestVariables.quoteFailure.lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote');"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "postRequest": {
              "exec": [
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.quoteResponse){",
                "    requestVariables.quoteSuccess = individualTransferResult;",
                "  } else{",
                "    requestVariables.quoteFailure = individualTransferResult;",
                "  }",
                "});"
              ]
            }
          }
        }
      ]
    },
    {
      "id": "tc-bq10-given-th-3c17",
      "name": "TC-BQ10. Given the transfers in the bulk request have 2 different receiver fsp ids, When both of the receivers sends an error, Then the PUT response should have details of failure details of all the 4 transfers.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchfailure"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatchfailure"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchfailure"
              },
              {
                "homeTransactionId": "abc4",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(4)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;",
                "",
                "environment.individualTransferId1 = acceptPartyCallback.body.individualTransferResults[0].transactionId;",
                "",
                "environment.individualTransferId2 = acceptPartyCallback.body.individualTransferResults[1].transactionId;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn",
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[3].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(4)"
                ]
              },
              {
                "id": "Check-first-quote-has-error",
                "description": "Check first quote has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('2001')",
                  "",
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote')"
                ]
              },
              {
                "id": "Check-second-quote-has-error",
                "description": "Check second quote has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorCode).to.equal('2001')",
                  "",
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote')"
                ]
              },
              {
                "id": "Check-third-quote-has-error",
                "description": "Check third quote has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[2].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[2].lastError.mojaloopError.errorInformation.errorCode).to.equal('2001')",
                  "",
                  "expect(callback.body.individualTransferResults[2].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote')"
                ]
              },
              {
                "id": "Check-fourth-quote-has-error",
                "description": "Check fourth quote has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[3].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[3].lastError.mojaloopError.errorInformation.errorCode).to.equal('2001')",
                  "",
                  "expect(callback.body.individualTransferResults[3].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Error processing bulk quote')"
                ]
              },
              {
                "id": "Check-state-COMPLETED",
                "description": "Check state is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bq11-given-th-ee1f",
      "name": "TC-BQ11. Given there are 2 transfers in the bulk request with different receiver fsp ids, When one of the receivers timesout, Then the PUT response should have details of the 2 transfers with success and timeout details.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-quotes-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note": "blkqtbatch"
              },
              {
                "homeTransactionId": "abc4",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note": "blkqtbatchtimesout"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn",
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}