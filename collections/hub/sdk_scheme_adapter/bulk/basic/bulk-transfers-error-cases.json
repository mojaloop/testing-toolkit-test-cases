{
  "name": "Transfers related error cases",
  "test_cases": [
    {
      "id": "tc-bt1-given-par-500d",
      "name": "TC-BT1. Given partyLookup is skipped And there are 2 transfers with the same receiver fspid in the request and acceptParty, acceptQuote is true for both the requests, When the receiver fsp fails the entire transfer batch, Then the callback response should have the party and quote results and a failure for transfer",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-transfers-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchfailure"
              },
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "put-bulk-txn-acceptQuote",
          "description": "put bulk transaction for acceptQuote",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptQuote": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-first-rsp-has-receiver-f",
                "description": "Check first response has the receiver fspid populated",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].to.partyIdInfo.fspId).to.not.be.empty"
                ]
              },
              {
                "id": "Check-first-rsp-has-quote-resu",
                "description": "Check first response has quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": "Check-first-rsp-has-ilpPacket-",
                "description": "Check first response has ilpPacket and condition",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-first-rsp-has-error-deta",
                "description": "Check first response has error details for transfer response",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('4001');",
                  "",
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Cannot process the bulk transfer');"
                ]
              },
              {
                "id": "Check-second-rsp-has-receiver-",
                "description": "Check second response has the receiver fspid populated",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].to.partyIdInfo.fspId).to.not.be.empty"
                ]
              },
              {
                "id": "Check-second-rsp-has-quote-res",
                "description": "Check second response has quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse).to.exist;"
                ]
              },
              {
                "id": "Check-second-rsp-has-ilpPacket",
                "description": "Check second response has ilpPacket and condition",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[1].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-second-rsp-has-error-det",
                "description": "Check second response has error details for transfer response",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorCode).to.equal('4001');",
                  "",
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Cannot process the bulk transfer');"
                ]
              },
              {
                "id": "Check-overall-bulk-txn-state-C",
                "description": "Check overall bulk transaction state is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bt2-given-par-0ea7",
      "name": "TC-BT2. Given partyLookup is skipped And there are 2 transfers with the same receiver fspid in the request and acceptParty, acceptQuote is true for both the requests, When the receiver fsp times out the entire transfer batch, Then the callback response should have the party and quote results and time out failure for transfer",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-transfers-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "123.45",
                "note": "blktrbatchtimesout"
              },
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "123.45",
                "note": "blktrbatchtimesout"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "postRequest": {
              "exec": [
                "environment.acceptQuoteCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptQuote",
          "description": "put bulk transaction for acceptQuote",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptQuote": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-rsp-MSISDN-req",
                "description": "Check response MSISDN is same as in the request",
                "exec": [
                  "expect(callback.body.individualTransferResults.map(t => t.to.partyIdInfo.partyIdentifier)).to.include('{$inputs.TTKSIM2_MSISDN_1}')"
                ]
              },
              {
                "id": "Check-rsp-has-receiver-fspid-p",
                "description": "Check response has the receiver fspid populated",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].to.partyIdInfo.fspId).to.not.be.empty"
                ]
              },
              {
                "id": "Check-rsp-has-quote-result",
                "description": "Check response has quote result",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": "Check-rsp-has-ilpPacket-condit",
                "description": "Check response has ilpPacket and condition",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": "Check-both-trans-responses-fai",
                "description": "Check both the transfer responses are failed",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.httpStatusCode).to.equal(504);",
                  "",
                  "expect(callback.body.individualTransferResults[1].lastError.httpStatusCode).to.equal(504);"
                ]
              },
              {
                "id": "Check-overall-bulk-txn-state-C",
                "description": "Check overall bulk transaction state is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": "tc-bt10-given-pa-1859",
      "name": "TC-BT10. Given partyLookup is skipped And there are 2 transfers with the different receiver fspid in the request and acceptParty, acceptQuote is true for both the requests, When one of the receiver fsp fails the entire transfer batch, while the other receiving fsp sends succesful reponse,  Then the callback response should have the party, quote, transfer results for the batch that sends success response and only party and quote result for the batch that is failed.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-transfers-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "789.56"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchfailure"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(3)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "put-bulk-txn-acceptQuote",
          "description": "put bulk transaction for acceptQuote",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transferId}",
                "acceptQuote": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(3)"
                ]
              },
              {
                "id": "Check-there-2-tranfer-failures",
                "description": "Check there are 2 tranfer failures",
                "exec": [
                  "expect(requestVariables.transferFailures.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-success-rsp-has-trans-re",
                "description": "Check success response has transfer result",
                "exec": [
                  "expect(requestVariables.transferSuccess.fulfil).to.exist;"
                ]
              },
              {
                "id": "Check-first-failure-rsp-has-er",
                "description": "Check first failure response has error details for transfer response",
                "exec": [
                  "expect(requestVariables.transferFailures[0].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(requestVariables.transferFailures[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('4001');",
                  "",
                  "expect(requestVariables.transferFailures[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Cannot process the bulk transfer');"
                ]
              },
              {
                "id": "Check-second-failure-rsp-has-e",
                "description": "Check second failure response has error details for transfer response",
                "exec": [
                  "expect(requestVariables.transferFailures[1].lastError.httpStatusCode).to.equal(500);",
                  "",
                  "expect(requestVariables.transferFailures[1].lastError.mojaloopError.errorInformation.errorCode).to.equal('4001');",
                  "",
                  "expect(requestVariables.transferFailures[1].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Cannot process the bulk transfer');"
                ]
              }
            ]
          },
          "scripts": {
            "postRequest": {
              "exec": [
                "let transferFailures = []",
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.fulfil){",
                "    requestVariables.transferSuccess = individualTransferResult;",
                "  } else{",
                "    transferFailures.push(individualTransferResult);",
                "  }",
                "});",
                "requestVariables.transferFailures = transferFailures"
              ]
            }
          }
        }
      ]
    },
    {
      "id": "tc-bt11-given-pa-bde5",
      "name": "TC-BT11. Given partyLookup is skipped And there are 2 transfers with the different receiver fspid in the request and acceptParty, acceptQuote is true for both the requests, When one of the receiver fsp fails the entire transfer batch, while the other receiving fsp sends succesful reponse,  Then the callback response should have the party, quote, transfer results for the batch that sends success response and only party and quote result for the batch that is failed.",
      "fileInfo": {
        "path": "hub/sdk_scheme_adapter/bulk/basic/bulk-transfers-error-cases.json",
        "labels": [
          "basic"
        ]
      },
      "requests": [
        {
          "id": "Post-bulkTransaction",
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "789.56"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchtimesout"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "789.56",
                "note": "blktrbatchtimesout"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(3)"
                ]
              },
              {
                "id": "Check-current-state-WAITING_FO",
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": "put-bulk-txn-acceptParty",
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptParty": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transferId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-state-WAITING_FOR_QUOTE_",
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "put-bulk-txn-acceptQuote",
          "description": "put bulk transaction for acceptQuote",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_2.1/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.Post-bulkTransaction.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.Post-bulkTransaction.request.body.bulkTransactionId}"
          },
          "body": {
            "individualTransfers": [
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transferId}",
                "acceptQuote": true
              },
              {
                "transferId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transferId}",
                "acceptQuote": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": "Check-Return-Status-Code",
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": "Check-number-returned-transfer",
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(3)"
                ]
              },
              {
                "id": "Check-there-2-tranfer-failures",
                "description": "Check there are 2 tranfer failures",
                "exec": [
                  "expect(requestVariables.transferFailures.length).to.equal(2)"
                ]
              },
              {
                "id": "Check-success-rsp-has-trans-re",
                "description": "Check success response has transfer result",
                "exec": [
                  "expect(requestVariables.transferSuccess.fulfil).to.exist;"
                ]
              },
              {
                "id": "Check-first-failure-rsp-has-er",
                "description": "Check first failure response has error details for transfer response",
                "exec": [
                  "expect(requestVariables.transferFailures[0].lastError.httpStatusCode).to.equal(504);"
                ]
              },
              {
                "id": "Check-second-failure-rsp-has-e",
                "description": "Check second failure response has error details for transfer response",
                "exec": [
                  "expect(requestVariables.transferFailures[1].lastError.httpStatusCode).to.equal(504);"
                ]
              }
            ]
          },
          "scripts": {
            "postRequest": {
              "exec": [
                "let transferFailures = []",
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.fulfil){",
                "    requestVariables.transferSuccess = individualTransferResult;",
                "  } else{",
                "    transferFailures.push(individualTransferResult);",
                "  }",
                "});",
                "requestVariables.transferFailures = transferFailures"
              ]
            }
          }
        }
      ]
    }
  ]
}