{
  "name": "Transfers Negative Scenarios",
  "test_cases": [
    {
      "id": 1,
      "name": "Proxy Transfers Service when there is an error in payee dfsp",
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Test Case for scenario when there is an error in payee dfsp"
          },
          "description": "Send transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true
          },
          "url": "{$inputs.HOST_ML_API_ADAPTER}",
          "operationPath": "/transfers",
          "method": "post",
          "headers": {
            "Accept": "{$inputs.acceptTransfers}",
            "Content-Type": "{$inputs.contentTypeTransfers}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.PROXY_PAYEE_TEST_PAYERFSP_ID}",
            "Authorization": "{$inputs.TTK_BEARER_TOKEN}",
            "FSPIOP-Destination": "{$inputs.PROXY_PAYEE_TEST_PAYEEFSP_ID}",
            "FSPIOP-Proxy": "{$inputs.PROXY_HEADER}"
          },
          "body": {
            "transferId": "{$function.generic.generateID}",
            "payerFsp": "{$inputs.PROXY_PAYEE_TEST_PAYERFSP_ID}",
            "payeeFsp": "{$inputs.PROXY_PAYEE_TEST_PAYEEFSP_ID}",
            "amount": {
              "amount": "{$inputs.PROXY_PAYEE_DFSP_ERROR_AMOUNT_5XXX}",
              "currency": "{$inputs.PROXY_AMOUNT_CURRENCY}"
            },
            "expiration": "{$inputs.expiration}",
            "ilpPacket": "{$inputs.ilpPacket}",
            "condition": "{$inputs.condition}"
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              }
            ]
          },
          "path": "/quotes",
          "scripts": {
            "preRequest": {
              "exec": [
                "if (environment.ENABLE_WS_ASSERTIONS===true) {",
                "  await websocket.connect(environment.PAYEEFSP_SDK_TESTAPI_WS_URL + '/requests/{$request.body.quoteId}', 'payeeRequest')",
                "}"
              ]
            },
            "postRequest": {
              "exec": [
                "if (environment.ENABLE_WS_ASSERTIONS===true) {",
                "  environment.payeeRequest = await websocket.getMessage('payeeRequest', environment.WS_ASSERTION_TIMEOUT)",
                "}"
              ]
            }
          }
        }
      ]
    }
  ]
}