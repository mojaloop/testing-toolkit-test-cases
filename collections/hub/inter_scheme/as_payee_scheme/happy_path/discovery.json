{
    "name": "Party Lookup Happy Path",
    "test_cases": [
      {
        "id": "1",
        "name": "Party Lookup for ProxyAB if not cached",
        "requests": [
          {
            "id": "1",
            "description": "Send party lookup request",
            "apiVersion": {
              "minorVersion": 1,
              "majorVersion": 1,
              "type": "fspiop",
              "asynchronous": true
            },
            "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
            "operationPath": "/parties/{Type}/{ID}",
            "method": "get",
            "params": {
              "Type": "{$inputs.PROXY_PAYEEFSP_PARTY_ID_TYPE}",
              "ID": "{$inputs.PROXY_PAYEE_TEST_PAYEEFSP_PARTY_ID}"
            },
            "headers": {
              "Accept": "application/vnd.interoperability.parties+json;version=1.0",
              "Content-Type": "application/vnd.interoperability.parties+json;version=1.0",
              "Date": "{$function.generic.curDate}",
              "FSPIOP-Source": "{$inputs.PROXY_PAYERFSP_ID}",
              "FSPIOP-Proxy": "{$inputs.PROXY_HEADER}",
              "Authorization": "{$inputs.TTK_BEARER_TOKEN}"
            },
            "tests": {
                "assertions": [
                  {
                    "id": 1,
                    "description": "Response status to be 202",
                    "exec": [
                      "expect(response.status).to.equal(202)"
                    ]
                  },
                  {
                    "id": 2,
                    "description": "Response Source Header same as Payeefsp Id",
                    "exec": [
                      "expect(callback.headers['fspiop-source']).to.equal('{$inputs.PROXY_PAYEE_TEST_PAYEEFSP_ID}')"
                    ]
                  },
                  {
                    "id": 3,
                    "description": "Response Destination Header same as Payerfsp Id",
                    "exec": [
                      "expect(callback.headers['fspiop-destination']).to.equal('{$inputs.PROXY_PAYEE_TEST_PAYERFSP_ID}')"
                    ]
                  },
                  {
                    "id": 4,
                    "description": "Callback content-type to be parties",
                    "exec": [
                      "expect(callback.headers['content-type']).to.equal('application/vnd.interoperability.parties+json;version=1.0')"
                    ]
                  },
                  {
                    "id": 5,
                    "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                    "exec": [
                      "expect(callback.body.party.partyIdInfo.partyIdType).to.equal('{$inputs.PROXY_PAYEEFSP_PARTY_ID_TYPE}')"
                    ]
                  },
                  {
                    "id": 6,
                    "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                    "exec": [
                      "expect(callback.body.party.partyIdInfo.partyIdentifier).to.equal('{$inputs.PROXY_PAYEE_TEST_PAYEEFSP_PARTY_ID}')"
                    ]
                  },
                  {
                    "id": 7,
                    "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                    "exec": [
                      "expect(callback.body.party.personalInfo.complexName.firstName).to.equal('{$inputs.PROXY_PAYEEFSP_PARTY_FIRST_NAME}')"
                    ]
                  },
                  {
                    "id": 8,
                    "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                    "exec": [
                      "expect(callback.body.party.personalInfo.complexName.lastName).to.equal('{$inputs.PROXY_PAYEEFSP_PARTY_LAST_NAME}')"
                    ]
                  }
                ]
              }
          }
        ]
      }
    ]
  }