{
  "name": "multi",
  "test_cases": [
    {
      "id": 4,
      "name": "TC-BQ4. Given party lookup is skipped and bulk quotes request having 2 transfers with same receiver fsp id is submitted, When receiver fsp only sends response for 1 quotes out of the 2 while sending bulk quotes reponse, Then the PUT response should have details about success quote response. The story for this feature is github.com/mojaloop/project/issues/3015. Need to test this once this story implementation is complete.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId":"{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatchwith1qtresponse"
              },
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatchwith1qtresponse"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$callback.body.individualTransferResults[0].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$callback.body.individualTransferResults[1].transactionId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 4,
                "description": "Check response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": 7,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 6,
      "name": "TC-BQ6. Given there are 2 transfers in the bulk request, When the sender fsp sends  acceptParty:false for the both the quotes, Then the PUT response should have party details of the 2 transfers and the final state should be AGREEMENT_COMPLETED. The story for this feature is github.com/mojaloop/project/issues/3015. Need to test this once this story implementation is complete.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91",
                "note":"blkqtbatch"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": false
              },
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transactionId}",
                "acceptParty": false
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 5,
                "description": "Check state is AGREEMENT_COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('AGREEMENT_COMPLETED')"
                ]
              }
            ]
          }          
        }
      ]
    },
    {
      "id": 7,
      "name": "TC-BQ7. Given there are 2 transfers in the bulk request, When the sender fsp sends  acceptParty:true for the one of the transfers and ignores the other, Then the PUT response should have party details of the 1 transfer for which the acceptParty response was sent. The story for this feature is github.com/mojaloop/project/issues/3015. Need to test this once this story implementation is complete.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "2016-05-24T08:38:08.699-04:00"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456789",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456789",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "678.91",
                "note":"blkqtbatch"
              }
            ]
          },
          "url": "http://payer-sdk-api-svc:4001",
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "await inboundEvent.addListener('acceptPartyCallback', 'put', '/bulkTransactions/{$request.body.bulkTransactionId}')"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptPartyCallback = await inboundEvent.getMessage('acceptPartyCallback')",
                "console.log(acceptPartyCallback);",
                "",
                "environment.bulkTransactionId = acceptPartyCallback.body.bulkTransactionId;",
                "",
                "environment.acceptPartyCallback = acceptPartyCallback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "url": "http://payer-sdk-api-svc:4001",
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 4,
                "description": "Check response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": 5,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "console.log(environment.bulkTransactionId)",
                "",
                "await inboundEvent.addListener('acceptQuoteCallback', 'put', `/bulkTransactions/${environment.bulkTransactionId}`)"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptQuoteCallback = await inboundEvent.getMessage('acceptQuoteCallback')",
                "",
                "console.log(acceptQuoteCallback)",
                "",
                "environment.acceptQuoteCallback = acceptQuoteCallback;"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 8,
      "name": "TC-BQ8. Given there are 2 transfers in the bulk request, When the sender fsp sends  acceptParty:false for the one of the transfers and ignores the other, Then the PUT response should have party details of the 1 transfer for which the acceptParty response was sent. The story for this feature is github.com/mojaloop/project/issues/3015. Need to test this once this story implementation is complete.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "2016-05-24T08:38:08.699-04:00"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456789",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456789",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "678.91",
                "note":"blkqtbatch"
              }
            ]
          },
          "url": "http://payer-sdk-api-svc:4001",
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "await inboundEvent.addListener('acceptPartyCallback', 'put', '/bulkTransactions/{$request.body.bulkTransactionId}')"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptPartyCallback = await inboundEvent.getMessage('acceptPartyCallback')",
                "console.log(acceptPartyCallback);",
                "",
                "environment.bulkTransactionId = acceptPartyCallback.body.bulkTransactionId;",
                "",
                "environment.acceptPartyCallback = acceptPartyCallback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction for acceptParty",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "url": "http://payer-sdk-api-svc:4001",
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": false
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 4,
                "description": "Check response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": 5,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "console.log(environment.bulkTransactionId)",
                "",
                "await inboundEvent.addListener('acceptQuoteCallback', 'put', `/bulkTransactions/${environment.bulkTransactionId}`)"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptQuoteCallback = await inboundEvent.getMessage('acceptQuoteCallback')",
                "",
                "console.log(acceptQuoteCallback)",
                "",
                "environment.acceptQuoteCallback = acceptQuoteCallback;"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 9,
      "name": "TC-BQ9. Given the transfers in the bulk request have 2 different receiver fsp ids, When one of the receivers sends an error, Then the PUT response should have details of the 2 transfers with success and failure details.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note":"blkqtbatchfailure"
              },
              {
                "homeTransactionId": "abc4",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_2}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note":"blkqtbatchfailure"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(4)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc2",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc3",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[2].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc4",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[3].transactionId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(4)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has quote result for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 4,
                "description": "Check response has ilpPacket and condition for first transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[0].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": 5,
                "description": "Check response has quote result for second transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 6,
                "description": "Check response has ilpPacket and condition for second transfer",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].quoteResponse.ilpPacket).to.not.be.empty;",
                  "",
                  "expect(callback.body.individualTransferResults[1].quoteResponse.condition).to.not.be.empty;"
                ]
              },
              {
                "id": 7,
                "description": "Check quote result for third transfer has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[2].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 8,
                "description": "Check quote result for fourth transfer has an error",
                "exec": [
                  "expect(callback.body.individualTransferResults[3].quoteResponse).to.exist;"
                ]
              },
              {
                "id": 7,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 11,
      "name": "TC-BQ11. Given there are 2 transfers in the bulk request with different receiver fsp ids, When one of the receivers timesout, Then the PUT response should have details of the 2 transfers with success and timeout details.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78",
                "note":"blkqtbatch"
              },
              {
                "homeTransactionId": "abc4",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM3_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM3_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM3_CURRENCY}",
                "amount": "678.91",
                "note":"blkqtbatchtimesout"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+240000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "environment.acceptPartyCallback = callback;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transactionId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 12,
      "name": "TC-BQ12. Given there are 3 transfers in the bulk request, 2 transfers having one receiver fsp id and the other having a different receiver fsp id, When the receiver that has 2 transfers sends quote response for only one and ignores the other And the other receiver with 1 transfer sends a success reponse, Then the PUT response should have details of the 2 transfers with success and timeout details.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": true,
              "synchronous": false,
              "bulkExpiration": "2016-05-24T08:38:08.699-04:00"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}",
                "fspId": "{$inputs.TTKSIM1_FSPID}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456789",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "456.78",
                "note":"blkqtbatchwith1qtresponse"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456007",
                    "fspId": "ttksim2"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "678.91",
                "note":"blkqtbatchwith1qtresponse"
              },
              {
                "homeTransactionId": "abc3",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "123456007",
                    "fspId": "ttksim3"
                  }
                },
                "amountType": "SEND",
                "currency": "USD",
                "amount": "678.91",
                "note":"blkqtbatchwith1qtresponse"
              }
            ]
          },
          "url": "http://payer-sdk-api-svc:4001",
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptPartyCallback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "await inboundEvent.addListener('acceptPartyCallback', 'put', '/bulkTransactions/{$request.body.bulkTransactionId}')"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptPartyCallback = await inboundEvent.getMessage('acceptPartyCallback')",
                "console.log(acceptPartyCallback);",
                "",
                "environment.bulkTransactionId = acceptPartyCallback.body.bulkTransactionId;",
                "",
                "environment.acceptPartyCallback = acceptPartyCallback;",
                "",
                "environment.individualTransferId1 = acceptPartyCallback.body.individualTransferResults[0].transactionId;",
                "",
                "environment.individualTransferId2 = acceptPartyCallback.body.individualTransferResults[1].transactionId;"
              ]
            }
          }
        },
        {
          "id": 2,
          "description": "put bulk transaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions/{bulkTransactionId}",
          "path": "/bulkTransactions/{$prev.1.request.body.bulkTransactionId}",
          "method": "put",
          "params": {
            "bulkTransactionId": "{$prev.1.request.body.bulkTransactionId}"
          },
          "url": "http://payer-sdk-api-svc:4001",
          "body": {
            "bulkHomeTransactionID": "{$prev.1.request.body.bulkHomeTransactionID}",
            "individualTransfers": [
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[0].transactionId}",
                "acceptParty": true
              },
              {
                "homeTransactionId": "abc456",
                "transactionId": "{$environment.acceptPartyCallback.body.individualTransferResults[1].transactionId}",
                "acceptParty": true
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check state is WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(environment.acceptQuoteCallback.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "console.log(environment.bulkTransactionId)",
                "",
                "await inboundEvent.addListener('acceptQuoteCallback', 'put', `/bulkTransactions/${environment.bulkTransactionId}`)"
              ]
            },
            "postRequest": {
              "exec": [
                "const acceptQuoteCallback = await inboundEvent.getMessage('acceptQuoteCallback')",
                "",
                "console.log(acceptQuoteCallback)",
                "",
                "environment.acceptQuoteCallback = acceptQuoteCallback;"
              ]
            }
          }
        }
      ]
    }
    
  ]
}