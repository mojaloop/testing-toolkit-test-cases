{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "TC-BP1. When the request has a receiver-id that does not exist in payee fsp, Then the payer fsp backend should receive an ID not found as error message in the PUT callback response.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_PARTY_NOT_FOUND}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check error code 4001",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorCode).to.equal('4001')"
                ]
              },
              {
                "id": 2,
                "description": "Check error description is ID Not Found",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorDescription).to.equal('Party Not Found in the backend application')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 2,
      "name": "TC-BP2. When the receiver fsp responds after the timeout elapses, Then the payer fsp should receive an timed-out as error message.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous":true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_PARTY_TIMES_OUT}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(1)"
                ]
              },
              {
                "id": 3,
                "description": "Check that the response has an error code of 4001",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('2004')"
                ]
              },
              {
                "id": 4,
                "description": "Check that the response has an error description of Server timed out",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Server timed out')"
                ]
              },
              {
                "id": 5,
                "description": "Check that the state in the final response is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            }
          }
        }
      ]
    },
    {
      "id":3,
      "name": "TC-BP3. Given skipPartyLookup is set to false, When the incoming request has receiver info already populated, Then party lookup should be skipped.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}",
                    "fspId": "{$inputs.TTKSIM2_FSPID}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check Receiver name should not exist",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].to.personalInfo).to.be.undefined"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 4,
      "name": "TC-BP4. Given there are 2 transfers in the bulk request, When one transfer has a succesful party lookup and the other has a failure, Then the PUT response should have details about both the transfers.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_PARTY_NOT_FOUND}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has the receiver fspid populated",
                "exec": [
                  "expect(environment.partySuccess.to.partyIdInfo.fspId).to.not.be.empty"
                ]
              },
              {
                "id": 4,
                "description": "Check response receiver first name is ReceiverFirst",
                "exec": [
                  "expect(environment.partySuccess.to.personalInfo.complexName.firstName).to.equal('ReceiverFirst')"
                ]
              },
              {
                "id": 5,
                "description": "Check response receiver last name is ReceiverLast",
                "exec": [
                  "expect(environment.partySuccess.to.personalInfo.complexName.lastName).to.equal('ReceiverLast')"
                ]
              },
              {
                "id": 6,
                "description": "Check that the response has an error code of 4001",
                "exec": [
                  "expect(requestVariables.partyFailure.lastError.mojaloopError.errorCode).to.equal('4001')"
                ]
              },
              {
                "id": 7,
                "description": "Check that the response has an error description of ID Not Found",
                "exec": [
                  "expect(requestVariables.partyFailure.lastError.mojaloopError.errorDescription).to.equal('Party Not Found in the backend application')"
                ]
              },
              {
                "id": 8,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(requestVariables.acceptPartyCallback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "requestVariables.acceptPartyCallback = callback;",
                "",
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.to){",
                "    environment.partySuccess = individualTransferResult;",
                "    environment.acceptPartyCallback = individualTransferResult;",
                "  } else{",
                "    requestVariables.partyFailure = individualTransferResult;",
                "  }",
                "});"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 5,
      "name": "TC-BP5. Given there are 2 transfers in the bulk request, When one transfer has a succesful party lookup and the other has a timeout, Then the PUT response should have details about both the transfers.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_1}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_PARTY_TIMES_OUT}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check response has the receiver fspid populated",
                "exec": [
                  "expect(requestVariables.partySuccess.to.partyIdInfo.fspId).to.not.be.empty"
                ]
              },
              {
                "id": 4,
                "description": "Check response receiver first name is ReceiverFirst",
                "exec": [
                  "expect(requestVariables.partySuccess.to.personalInfo.complexName.firstName).to.equal('ReceiverFirst')"
                ]
              },
              {
                "id": 5,
                "description": "Check response receiver last name is ReceiverLast",
                "exec": [
                  "expect(requestVariables.partySuccess.to.personalInfo.complexName.lastName).to.equal('ReceiverLast')"
                ]
              },
              {
                "id": 6,
                "description": "Check that the response has an error code of 2004",
                "exec": [
                  "expect(requestVariables.partyFailure.lastError.mojaloopError.errorInformation.errorCode).to.equal('2004')"
                ]
              },
              {
                "id": 7,
                "description": "Check that the response has an error description of ID Not Found",
                "exec": [
                  "expect(requestVariables.partyFailure.lastError.mojaloopError.errorInformation.errorDescription).to.equal('Server timed out')"
                ]
              },
              {
                "id": 8,
                "description": "Check current state is WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(callback.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.to){",
                "    requestVariables.partySuccess = individualTransferResult;",
                "  } else{",
                "    requestVariables.partyFailure = individualTransferResult;",
                "  }",
                "});",
                "",
                "console.log('partySuccess: ',requestVariables.partySuccess);",
                "",
                "console.log('partyFailure: ',requestVariables.partyFailure);"
              ]
            }
          }
        }
      ]
    },
    {
      "id": 6,
      "name": "TC-BP6. Given there are 2 transfers in the bulk request, When both the transfers have a timeout, Then the PUT response should have timeout details about both the transfers.",
      "fileInfo": {
        "path": "ttk-testcases/mvp-bulk.json"
      },
      "requests": [
        {
          "id": 1,
          "description": "Post /bulkTransaction",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "scheme_adapter_outbound",
            "asynchronous": true,
            "prefix": "/sdk-out",
            "hostnames": [],
            "specFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/mojaloop_sdk_outbound_scheme_adapter_1.0/trigger_templates"
          },
          "operationPath": "/bulkTransactions",
          "path": "/bulkTransactions",
          "method": "post",
          "body": {
            "bulkHomeTransactionID": "abc123",
            "bulkTransactionId": "{$function.generic.generateUUID}",
            "options": {
              "onlyValidateParty": true,
              "autoAcceptParty": {
                "enabled": false
              },
              "autoAcceptQuote": {
                "enabled": false
              },
              "skipPartyLookup": false,
              "synchronous": false,
              "bulkExpiration": "{$requestVariables.bulkTimeout}"
            },
            "from": {
              "partyIdInfo": {
                "partyIdType": "MSISDN",
                "partyIdentifier": "{$inputs.TTKSIM1_MSISDN_1}"
              }
            },
            "individualTransfers": [
              {
                "homeTransactionId": "abc1",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_TIMES_OUT}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "456.78"
              },
              {
                "homeTransactionId": "abc2",
                "to": {
                  "partyIdInfo": {
                    "partyIdType": "MSISDN",
                    "partyIdentifier": "{$inputs.TTKSIM2_MSISDN_TIMES_OUT}"
                  }
                },
                "amountType": "SEND",
                "currency": "{$inputs.TTKSIM2_CURRENCY}",
                "amount": "678.91"
              }
            ]
          },
          "scriptingEngine": "javascript",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Check Return Status Code",
                "exec": [
                  "expect(response.status).to.equal(202)",
                  ""
                ]
              },
              {
                "id": 2,
                "description": "Check number of returned transfers",
                "exec": [
                  "expect(callback.body.individualTransferResults.length).to.equal(2)"
                ]
              },
              {
                "id": 3,
                "description": "Check that the response has an error code of 2004",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorCode).to.equal('2004')"
                ]
              },
              {
                "id": 4,
                "description": "Check that the response has an error description of ID Not Found",
                "exec": [
                  "expect(callback.body.individualTransferResults[0].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Server timed out')"
                ]
              },
              {
                "id": 5,
                "description": "Check that the response has an error code of 2004",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorCode).to.equal('2004')"
                ]
              },
              {
                "id": 6,
                "description": "Check that the response has an error description of ID Not Found",
                "exec": [
                  "expect(callback.body.individualTransferResults[1].lastError.mojaloopError.errorInformation.errorDescription).to.equal('Server timed out')"
                ]
              },
              {
                "id": 8,
                "description": "Check current state is COMPLETED",
                "exec": [
                  "expect(callback.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          },
          "scripts": {
            "preRequest": {
              "exec": [
                "requestVariables.bulkTimeout = (new Date(Date.now()+120000)).toISOString()"
              ]
            },
            "postRequest": {
              "exec": [
                "requestVariables.acceptPartyCallback = callback;",
                "",
                "callback.body.individualTransferResults.forEach(individualTransferResult => {",
                "  if(individualTransferResult.to){",
                "    environment.partySuccess = individualTransferResult;",
                "    environment.acceptPartyCallback = individualTransferResult;",
                "  } else{",
                "    requestVariables.partyFailure = individualTransferResult;",
                "  }",
                "});"
              ]
            }
          }
        }
      ]
    }
  ]
}