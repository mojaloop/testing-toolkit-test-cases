{
  "options": {},
  "name": "collections_tests_fx_payer_sdk",
  "test_cases": [
    {
      "id": "send-a-transfer--049c",
      "name": "Send a transfer with currency conversion - Happy Path",
      "fileInfo": {
        "path": "pm4ml/sdk_fx_transfer.json"
      },
      "meta": {
        "info": "Send a transfer with currency conversion - Happy Path"
      },
      "requests": [
        {
          "id": "Initiate-trans",
          "description": "Initiate a transfer",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": false
          },
          "operationPath": "/transfers",
          "path": "/transfers",
          "method": "post",
          "url": null,
          "body": {
            "homeTransactionId": "{$inputs.HOME_TRANSACTION_ID}",
            "from": {
              "idType": "MSISDN",
              "idValue": "{$inputs.FX_SOURCE_PARTY_ID_1}",
              "displayName": "{$inputs.FROM_DISPLAY_NAME}",
              "firstName": "{$inputs.FROM_FIRST_NAME}",
              "middleName": "{$inputs.FROM_MIDDLE_NAME}",
              "lastName": "{$inputs.FROM_LAST_NAME}",
              "dateOfBirth": "{$inputs.FROM_DOB}",
              "merchantClassificationCode": "123",
              "fspId": "{$inputs.FROM_FSP_ID}"
            },
            "to": {
              "idType": "MSISDN",
              "idValue": "{$inputs.FX_DESTINATION_PARTY_ID_1}"
            },
            "amountType": "SEND",
            "transactionType": "TRANSFER",
            "currency": "{$inputs.FX_SOURCE_CURRENCY}",
            "amount": "{$inputs.FX_SOURCE_AMOUNT}"
          },
          "tests": {
            "assertions": [
              {
                "id": "Status-200",
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": "Current-state-WAITING_FOR_PART",
                "description": "Current state should be WAITING_FOR_PARTY_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_PARTY_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "Accept-Party",
          "description": "Accept Party",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": false
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.Initiate-trans.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.Initiate-trans.response.body.transferId}"
          },
          "url": null,
          "body": {
            "acceptParty": true
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": "Status-200",
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": "Current-state-WAITING_FOR_CONV",
                "description": "Current state should be WAITING_FOR_CONVERSION_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_CONVERSION_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "Accept-Conversion",
          "description": "Accept Conversion",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": false
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.Initiate-trans.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.Initiate-trans.response.body.transferId}"
          },
          "url": null,
          "body": {
            "acceptConversion": true
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": "Status-200",
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": "Current-state-WAITING_FOR_QUOT",
                "description": "Current state should be WAITING_FOR_QUOTE_ACCEPTANCE",
                "exec": [
                  "expect(response.body.currentState).to.equal('WAITING_FOR_QUOTE_ACCEPTANCE')"
                ]
              }
            ]
          }
        },
        {
          "id": "Accept-Quote",
          "description": "Accept Quote",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 2,
            "type": "mojaloop_connector_outbound",
            "asynchronous": false
          },
          "operationPath": "/transfers/{transferId}",
          "path": "/transfers/{$prev.Initiate-trans.response.body.transferId}",
          "method": "put",
          "params": {
            "transferId": "{$prev.Initiate-trans.response.body.transferId}"
          },
          "url": null,
          "body": {
            "acceptQuote": true
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": "Status-200",
                "description": "Status is 200",
                "exec": [
                  "expect(response.status).to.equal(200)"
                ]
              },
              {
                "id": "Current-state-COMPLETED",
                "description": "Current state should be COMPLETED",
                "exec": [
                  "expect(response.body.currentState).to.equal('COMPLETED')"
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}